#! /bin/bash

# Dummy PAM to generate a wireframe image of an ESP-r model in pdf format.

# Set up defaults.
building=""
tmp_dir="./tmp"
information=false
model_image="$tmp_dir/pic.jpg"

# Parse command line.
# accept standard PAM arguments, just don't do anything with them.
while getopts ":hvf:p:t:s:d:r:j:c:b:i:" opt; do
  case "$opt" in
    h) information=true;;
    v) continue;;
    f) continue;;
    p) continue;;
    t) continue;;
    s) continue;;
    d) continue;;
    r) continue;;
    j) continue;;
    c) continue;;
    b) continue;;
    i) continue;;
    \?) echo "Error: unknown option -$OPTARG. Use option -h for help." >&2
        exit 1;;
    :) echo "Error: option -$OPTARG requires and argument." >&2
       exit 1;;
  esac
done
shift $((OPTIND-1))
building="$1"

if [ "X$building" == "X" ]; then
  echo "Error: no input model specified." >&2
  exit 1
fi

# Test if model cfg file exists.
if ! [ -f "$building" ]; then
  echo "Error: model cfg file could not be found." >&2
  echo "$PWD" >&2
  echo "$building" >&2
  exit 1
fi

dateTime="$(date -u)"

if "$information" ; then
  echo
  echo " Usage: ./wireframe.sh [-h] model-cfg-file"
  echo
  echo " Dummy PAM that generates a .pdf wireframe image of an ESP-r model."
  echo " This image is placed in \"./report.pdf\"."
  echo " This has less command line options than your average PAM beacuse"
  echo " it is a utility for the HIT2GAP platform, and is not intended for"
  echo " public release in it's current form."
  echo
  echo " Command line options: -h"
  echo "                          display help text and exit"
  echo "                          default: off"

  exit 0
fi

# Test if tmp directory exists.
if ! [ -d "$tmp_dir" ]; then
  mkdir "$tmp_dir"
  if ! [ -d "$tmp_dir" ]; then
    echo "Error: could not create temporary files directory." >&2
    exit 1
  fi
fi

# ESP-r seems to have problems if locations have a dot in
# front of them; check for this and remove it.
if [ "${tmp_dir:0:2}" == "./" ] && ! [ "$tmp_dir" == "./" ]; then
  tmp_dir="${tmp_dir:2}"
fi

# Generate image.
ecnv -if esp -in "$building" -of viewer -out "$tmp_dir/comfort_view.v" > "$tmp_dir/ecnv.out"
viewer -mode script -file "$tmp_dir/comfort_view.v" > "$tmp_dir/viewer.out" <<~

r
f
>
b
${tmp_dir}/comfort_view.ww
t
-
~
ecnv -if ww -in "$tmp_dir/comfort_view.ww" -of xfig -out "$tmp_dir/comfort_view.fig" >> "$tmp_dir/ecnv.out"
fig2dev -L jpeg "$tmp_dir/comfort_view.fig" > "$model_image" 

# Check that image has been generated.
if ! [ -f "$model_image" ]; then
  echo "Error: failed to generate wireframe image of model"
  exit 1
fi

# Create outputs emulating a full PAM - pic goes in report.pdf.
mv "$model_image" "./pic.jpg"
echo '{"wireframe": {' > "data.json"
echo '  "run_dateTime": "'"$dateTime"'"' >> "data.json"
echo '}}' >> "data.json"
